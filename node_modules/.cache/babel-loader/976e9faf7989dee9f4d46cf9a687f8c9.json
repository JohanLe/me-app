{"ast":null,"code":"var _jsxFileName = \"/Users/Ledel/Documents/skola/bth/dbwebb-kurser/ramverk1/me/app/me-app/me-app/src/js/components/ReportEdit.js\";\nimport React from 'react';\nimport ReportQuestion from './ReportQuestion.js';\n\nclass ReportEdit extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getReport = () => {\n      // const kmom = this.props.match.params.kmom;\n      fetch(\"http://localhost:8333/reports/\" + 1, {\n        method: \"GET\",\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      }).then(res => {\n        return res.json();\n      }).then(res => {\n        console.log(res);\n      });\n    };\n\n    this.createReportQuestion = data => {\n      data.map((collection, index) => {\n        React.createElement(ReportQuestion, {\n          question: collection.question,\n          answer: collection.answer,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        });\n      });\n    };\n  }\n\n  render() {\n    const kmom = this.props.match.params.kmom;\n    this.getReport(2);\n    this.createReportQuestion(testData);\n    return React.createElement(\"div\", {\n      className: \"edit_report_container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, this.test), React.createElement(ReportQuestion, {\n      question: \"quest1\",\n      answer: \"answer1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }));\n  }\n\n}\n\nvar testData = [{\n  question: \"q1\",\n  answer: \"a1\"\n}, {\n  question: \"q2\",\n  answer: \"a2\"\n}, {\n  question: \"q3\",\n  answer: \"a3\"\n}, {\n  question: \"q4\",\n  answer: \"a4\"\n}, {\n  question: \"q5\",\n  answer: \"a5\"\n}];\nexport default ReportEdit;","map":{"version":3,"sources":["/Users/Ledel/Documents/skola/bth/dbwebb-kurser/ramverk1/me/app/me-app/me-app/src/js/components/ReportEdit.js"],"names":["React","ReportQuestion","ReportEdit","Component","getReport","fetch","method","headers","then","res","json","console","log","createReportQuestion","data","map","collection","index","question","answer","render","kmom","props","match","params","testData","test"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,qBAA3B;;AAEA,MAAMC,UAAN,SAAyBF,KAAK,CAACG,SAA/B,CAAyC;AAAA;AAAA;;AAAA,SAErCC,SAFqC,GAEzB,MAAI;AACZ;AACAC,MAAAA,KAAK,CAAC,mCAAmC,CAApC,EAAuC;AACxCC,QAAAA,MAAM,EAAE,KADgC;AAExCC,QAAAA,OAAO,EAAE;AACL,oBAAU,kBADL;AAEL,0BAAgB;AAFX;AAF+B,OAAvC,CAAL,CAMGC,IANH,CAMSC,GAAD,IAAS;AACb,eAAOA,GAAG,CAACC,IAAJ,EAAP;AACH,OARD,EAQGF,IARH,CAQSC,GAAD,IAAS;AACbE,QAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AAEH,OAXD;AAYH,KAhBoC;;AAAA,SAiBrCI,oBAjBqC,GAiBbC,IAAD,IAAQ;AAE3BA,MAAAA,IAAI,CAACC,GAAL,CAAS,CAACC,UAAD,EAAaC,KAAb,KAAqB;AAC1B,4BAAC,cAAD;AACI,UAAA,QAAQ,EAAED,UAAU,CAACE,QADzB;AAEI,UAAA,MAAM,EAAEF,UAAU,CAACG,MAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGL,OAJC;AAMH,KAzBoC;AAAA;;AA4BrCC,EAAAA,MAAM,GAAG;AACL,UAAMC,IAAI,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,IAArC;AACA,SAAKjB,SAAL,CAAe,CAAf;AACA,SAAKS,oBAAL,CAA0BY,QAA1B;AACA,WAEI;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKC,IADV,CADJ,EAII,oBAAC,cAAD;AAAgB,MAAA,QAAQ,EAAC,QAAzB;AAAkC,MAAA,MAAM,EAAC,SAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,CAFJ;AAYH;;AA5CoC;;AAgDzC,IAAID,QAAQ,GAAG,CACX;AAACP,EAAAA,QAAQ,EAAE,IAAX;AAAiBC,EAAAA,MAAM,EAAC;AAAxB,CADW,EAEX;AAACD,EAAAA,QAAQ,EAAE,IAAX;AAAiBC,EAAAA,MAAM,EAAC;AAAxB,CAFW,EAGX;AAACD,EAAAA,QAAQ,EAAE,IAAX;AAAiBC,EAAAA,MAAM,EAAC;AAAxB,CAHW,EAIX;AAACD,EAAAA,QAAQ,EAAE,IAAX;AAAiBC,EAAAA,MAAM,EAAC;AAAxB,CAJW,EAKX;AAACD,EAAAA,QAAQ,EAAE,IAAX;AAAiBC,EAAAA,MAAM,EAAC;AAAxB,CALW,CAAf;AAQA,eAAejB,UAAf","sourcesContent":["import React from 'react';\nimport ReportQuestion from './ReportQuestion.js';\n\nclass ReportEdit extends React.Component {\n\n    getReport = ()=>{\n        // const kmom = this.props.match.params.kmom;\n        fetch(\"http://localhost:8333/reports/\" + 1, {\n            method: \"GET\",\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            },\n        }).then((res) => {\n            return res.json()\n        }).then((res) => {\n            console.log(res);\n\n        });\n    };\n    createReportQuestion = (data)=>{\n\n        data.map((collection, index)=>{\n            <ReportQuestion\n                question={collection.question}\n                answer={collection.answer}/>\n      })\n\n    };\n\n\n    render() {\n        const kmom = this.props.match.params.kmom;\n        this.getReport(2);\n        this.createReportQuestion(testData);\n        return (\n\n            <div className=\"edit_report_container\">\n                <div>\n                    {this.test}\n                </div>\n                <ReportQuestion question=\"quest1\" answer=\"answer1\" />\n                <div>\n                </div>\n            </div>\n\n        )\n    }\n}\n\n\nvar testData = [\n    {question: \"q1\", answer:\"a1\"},\n    {question: \"q2\", answer:\"a2\"},\n    {question: \"q3\", answer:\"a3\"},\n    {question: \"q4\", answer:\"a4\"},\n    {question: \"q5\", answer:\"a5\"}\n]\n\nexport default ReportEdit;"]},"metadata":{},"sourceType":"module"}