{"ast":null,"code":"var _jsxFileName = \"/Users/ledel/WebbServer/dbwebb-kurser/jsramverk/me/app/me-app/src/js/components/Chat.js\";\nimport React from 'react';\nimport io from 'socket.io-client';\nconst socket = io('http://localhost:3000');\n\nclass Chat extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: \"\",\n      username: '',\n      messages: []\n    };\n    this.handleChange = this.handleChangeUsername.bind(this);\n    this.handleChange = this.handleChangeText.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleDataRecived = this.handleDataRecived.bind(this);\n  }\n\n  componentDidMount() {\n    socket.on('connect', function () {\n      console.info(\"Connected\");\n    });\n    socket.on('chat message', this.handleDataRecived);\n    socket.on('disconnect', function () {\n      console.info(\"Disconnected\");\n    });\n  }\n\n  handleDataRecived(message) {\n    var messages = this.state.messages;\n    messages.push(message);\n    this.setState({\n      messages: messages\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    socket.emit('chat message', this.state.value);\n  }\n\n  handleChangeUsername(event) {\n    this.setState({\n      value: event.target.value\n    });\n  }\n\n  handleChangeText(event) {\n    this.setState({\n      value: event.target.value\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"chat-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Chat\"), React.createElement(\"div\", {\n      className: \"all-message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, this.state.messages.map((msg, index) => React.createElement(\"p\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \" \", msg))), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.handleChangeUsername,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.handleChangeText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Skicka\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Chat;","map":{"version":3,"sources":["/Users/ledel/WebbServer/dbwebb-kurser/jsramverk/me/app/me-app/src/js/components/Chat.js"],"names":["React","io","socket","Chat","Component","constructor","props","state","text","username","messages","handleChange","handleChangeUsername","bind","handleChangeText","handleSubmit","handleDataRecived","componentDidMount","on","console","info","message","push","setState","event","preventDefault","emit","value","target","render","map","msg","index"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,EAAP,MAAe,kBAAf;AAEA,MAAMC,MAAM,GAAGD,EAAE,CAAC,uBAAD,CAAjB;;AAEA,MAAME,IAAN,SAAmBH,KAAK,CAACI,SAAzB,CAAmC;AAE/BC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE,EADG;AAETC,MAAAA,QAAQ,EAAE,EAFD;AAGTC,MAAAA,QAAQ,EAAE;AAHD,KAAb;AAMA,SAAKC,YAAL,GAAoB,KAAKC,oBAAL,CAA0BC,IAA1B,CAA+B,IAA/B,CAApB;AACA,SAAKF,YAAL,GAAoB,KAAKG,gBAAL,CAAsBD,IAAtB,CAA2B,IAA3B,CAApB;AACA,SAAKE,YAAL,GAAoB,KAAKA,YAAL,CAAkBF,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKG,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBH,IAAvB,CAA4B,IAA5B,CAAzB;AACH;;AACDI,EAAAA,iBAAiB,GAAE;AACff,IAAAA,MAAM,CAACgB,EAAP,CAAU,SAAV,EAAqB,YAAW;AAC5BC,MAAAA,OAAO,CAACC,IAAR,CAAa,WAAb;AACH,KAFD;AAIAlB,IAAAA,MAAM,CAACgB,EAAP,CAAU,cAAV,EAA0B,KAAKF,iBAA/B;AAEAd,IAAAA,MAAM,CAACgB,EAAP,CAAU,YAAV,EAAwB,YAAW;AAC/BC,MAAAA,OAAO,CAACC,IAAR,CAAa,cAAb;AACH,KAFD;AAGH;;AAEDJ,EAAAA,iBAAiB,CAACK,OAAD,EAAU;AACvB,QAAIX,QAAQ,GAAG,KAAKH,KAAL,CAAWG,QAA1B;AACAA,IAAAA,QAAQ,CAACY,IAAT,CAAcD,OAAd;AACA,SAAKE,QAAL,CAAc;AAACb,MAAAA,QAAQ,EAACA;AAAV,KAAd;AACH;;AAEDK,EAAAA,YAAY,CAACS,KAAD,EAAQ;AAChBA,IAAAA,KAAK,CAACC,cAAN;AAEAvB,IAAAA,MAAM,CAACwB,IAAP,CAAY,cAAZ,EAA4B,KAAKnB,KAAL,CAAWoB,KAAvC;AACH;;AAEDf,EAAAA,oBAAoB,CAACY,KAAD,EAAQ;AACvB,SAAKD,QAAL,CAAc;AAACI,MAAAA,KAAK,EAAEH,KAAK,CAACI,MAAN,CAAaD;AAArB,KAAd;AACF;;AACHb,EAAAA,gBAAgB,CAACU,KAAD,EAAQ;AACpB,SAAKD,QAAL,CAAc;AAACI,MAAAA,KAAK,EAAEH,KAAK,CAACI,MAAN,CAAaD;AAArB,KAAd;AACH;;AAGDE,EAAAA,MAAM,GAAG;AACL,WAAQ;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,KAAKtB,KAAL,CAAWG,QAAX,CAAoBoB,GAApB,CAAwB,CAACC,GAAD,EAAMC,KAAN,KACrB;AAAG,MAAA,GAAG,EAAEA,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAiBD,GAAjB,CADH,CADD,CAFJ,EASI;AAAM,MAAA,QAAQ,EAAE,KAAKhB,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAE,KAAKH,oBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAE,KAAKE,gBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CATJ,CAAR;AAgBH;;AAhE8B;;AAwEnC,eAAeX,IAAf","sourcesContent":["import React from 'react';\nimport io from 'socket.io-client';\n\nconst socket = io('http://localhost:3000');\n\nclass Chat extends React.Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            text: \"\",\n            username: '',\n            messages: []    \n        };\n\n        this.handleChange = this.handleChangeUsername.bind(this);\n        this.handleChange = this.handleChangeText.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleDataRecived = this.handleDataRecived.bind(this);\n    }\n    componentDidMount(){\n        socket.on('connect', function() {\n            console.info(\"Connected\");\n        });\n\n        socket.on('chat message', this.handleDataRecived);\n\n        socket.on('disconnect', function() {\n            console.info(\"Disconnected\");\n        });\n    }\n\n    handleDataRecived(message) {\n        var messages = this.state.messages;\n        messages.push(message);\n        this.setState({messages:messages});\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        \n        socket.emit('chat message', this.state.value);\n    }\n\n    handleChangeUsername(event) {\n         this.setState({value: event.target.value});\n      }\n    handleChangeText(event) {\n        this.setState({value: event.target.value});\n    }\n\n\n    render() {\n        return  <div className=\"chat-container\">\n                    <h4>Chat</h4>\n                    <div className=\"all-message\">\n                    {this.state.messages.map((msg, index) => (\n                        <p key={index}> {msg}</p>\n                    ))}\n\n                    </div>\n\n                    <form onSubmit={this.handleSubmit}>\n                        <input type=\"text\" onChange={this.handleChangeUsername}/>\n                        <input type=\"text\" onChange={this.handleChangeText} />\n                        <input type=\"submit\" value=\"Skicka\" />\n                    </form>\n                    \n                </div>\n    }\n}\n\n\n\n\n\n\nexport default Chat;"]},"metadata":{},"sourceType":"module"}