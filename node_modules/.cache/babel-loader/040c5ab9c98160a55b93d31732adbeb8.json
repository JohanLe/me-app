{"ast":null,"code":"import _classCallCheck from\"/Users/ledel/WebbServer/dbwebb-kurser/jsramverk/me/app/me-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/ledel/WebbServer/dbwebb-kurser/jsramverk/me/app/me-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/ledel/WebbServer/dbwebb-kurser/jsramverk/me/app/me-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/ledel/WebbServer/dbwebb-kurser/jsramverk/me/app/me-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _assertThisInitialized from\"/Users/ledel/WebbServer/dbwebb-kurser/jsramverk/me/app/me-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/ledel/WebbServer/dbwebb-kurser/jsramverk/me/app/me-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import io from'socket.io-client';var socket=io('http://localhost:3000');var Chat=/*#__PURE__*/function(_React$Component){_inherits(Chat,_React$Component);function Chat(props){var _this;_classCallCheck(this,Chat);_this=_possibleConstructorReturn(this,_getPrototypeOf(Chat).call(this,props));_this.state={text:\"\",username:\"\",messages:[]};_this.handleChangeUsername=_this.handleChangeUsername.bind(_assertThisInitialized(_this));_this.handleChangeText=_this.handleChangeText.bind(_assertThisInitialized(_this));_this.handleSubmit=_this.handleSubmit.bind(_assertThisInitialized(_this));_this.handleDataRecived=_this.handleDataRecived.bind(_assertThisInitialized(_this));return _this;}_createClass(Chat,[{key:\"componentDidMount\",value:function componentDidMount(){socket.on('connect',function(){console.info(\"Connected\");});socket.on('chat message',this.handleDataRecived);socket.on('disconnect',function(){console.info(\"Disconnected\");});}},{key:\"handleDataRecived\",value:function handleDataRecived(message){var messages=this.state.messages;messages.push(message);this.setState({messages:messages});}},{key:\"handleSubmit\",value:function handleSubmit(event){event.preventDefault();socket.emit('chat message',{username:this.state.username,text:this.state.text});}},{key:\"handleChangeUsername\",value:function handleChangeUsername(event){this.setState({username:event.target.value});}},{key:\"handleChangeText\",value:function handleChangeText(event){this.setState({text:event.target.value});}},{key:\"render\",value:function render(){return React.createElement(\"div\",{className:\"chat-container\"},React.createElement(\"h4\",null,\"Chat\"),React.createElement(\"div\",{className:\"all-messages\"},this.state.messages.map(function(msg,index){return React.createElement(\"div\",{key:index,className:\"message\"},React.createElement(\"p\",{className:\"all-messages-text\"},\"  \",msg.text),React.createElement(\"p\",{className:\"all-messages-username\"},\" \",msg.username));})),React.createElement(\"form\",{onSubmit:this.handleSubmit,className:\"message-form\"},React.createElement(\"label\",null,\"Username\"),React.createElement(\"input\",{type:\"text\",className:\"message-form-username\",onChange:this.handleChangeUsername}),React.createElement(\"label\",null,\"Message\"),React.createElement(\"input\",{type:\"text\",className:\"message-form-text\",onChange:this.handleChangeText}),React.createElement(\"input\",{type:\"submit\",value:\"Skicka\"})));}}]);return Chat;}(React.Component);export default Chat;","map":{"version":3,"sources":["/Users/ledel/WebbServer/dbwebb-kurser/jsramverk/me/app/me-app/src/js/components/Chat.js"],"names":["React","io","socket","Chat","props","state","text","username","messages","handleChangeUsername","bind","handleChangeText","handleSubmit","handleDataRecived","on","console","info","message","push","setState","event","preventDefault","emit","target","value","map","msg","index","Component"],"mappings":"slCAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,EAAP,KAAe,kBAAf,CAEA,GAAMC,CAAAA,MAAM,CAAGD,EAAE,CAAC,uBAAD,CAAjB,C,GAEME,CAAAA,I,0EAEF,cAAYC,KAAZ,CAAmB,sCACf,sEAAMA,KAAN,GACA,MAAKC,KAAL,CAAa,CACTC,IAAI,CAAE,EADG,CAETC,QAAQ,CAAE,EAFD,CAGTC,QAAQ,CAAE,EAHD,CAAb,CAMA,MAAKC,oBAAL,CAA4B,MAAKA,oBAAL,CAA0BC,IAA1B,+BAA5B,CACA,MAAKC,gBAAL,CAAwB,MAAKA,gBAAL,CAAsBD,IAAtB,+BAAxB,CACA,MAAKE,YAAL,CAAoB,MAAKA,YAAL,CAAkBF,IAAlB,+BAApB,CACA,MAAKG,iBAAL,CAAyB,MAAKA,iBAAL,CAAuBH,IAAvB,+BAAzB,CAXe,aAYlB,C,8EACkB,CACfR,MAAM,CAACY,EAAP,CAAU,SAAV,CAAqB,UAAW,CAC5BC,OAAO,CAACC,IAAR,CAAa,WAAb,EACH,CAFD,EAIAd,MAAM,CAACY,EAAP,CAAU,cAAV,CAA0B,KAAKD,iBAA/B,EAEAX,MAAM,CAACY,EAAP,CAAU,YAAV,CAAwB,UAAW,CAC/BC,OAAO,CAACC,IAAR,CAAa,cAAb,EACH,CAFD,EAGH,C,4DAEiBC,O,CAAS,CACvB,GAAIT,CAAAA,QAAQ,CAAG,KAAKH,KAAL,CAAWG,QAA1B,CACAA,QAAQ,CAACU,IAAT,CAAcD,OAAd,EACA,KAAKE,QAAL,CAAc,CAACX,QAAQ,CAACA,QAAV,CAAd,EACH,C,kDAEYY,K,CAAO,CAChBA,KAAK,CAACC,cAAN,GAEAnB,MAAM,CAACoB,IAAP,CAAY,cAAZ,CACA,CACIf,QAAQ,CAAE,KAAKF,KAAL,CAAWE,QADzB,CAEID,IAAI,CAAE,KAAKD,KAAL,CAAWC,IAFrB,CADA,EAKH,C,kEAEoBc,K,CAAO,CACvB,KAAKD,QAAL,CAAc,CAACZ,QAAQ,CAAEa,KAAK,CAACG,MAAN,CAAaC,KAAxB,CAAd,EACF,C,0DACcJ,K,CAAO,CACpB,KAAKD,QAAL,CAAc,CAACb,IAAI,CAAEc,KAAK,CAACG,MAAN,CAAaC,KAApB,CAAd,EACH,C,uCAGQ,CACL,MAAQ,4BAAK,SAAS,CAAC,gBAAf,EACI,qCADJ,CAEI,2BAAK,SAAS,CAAC,cAAf,EACC,KAAKnB,KAAL,CAAWG,QAAX,CAAoBiB,GAApB,CAAwB,SAACC,GAAD,CAAMC,KAAN,QACrB,4BAAK,GAAG,CAAEA,KAAV,CAAiB,SAAS,CAAC,SAA3B,EACI,yBAAG,SAAS,CAAC,mBAAb,OAAoCD,GAAG,CAACpB,IAAxC,CADJ,CAEI,yBAAG,SAAS,CAAC,uBAAb,MAAuCoB,GAAG,CAACnB,QAA3C,CAFJ,CADqB,EAAxB,CADD,CAFJ,CAaI,4BAAM,QAAQ,CAAE,KAAKK,YAArB,CAAmC,SAAS,CAAC,cAA7C,EACI,4CADJ,CAEI,6BAAO,IAAI,CAAC,MAAZ,CAAmB,SAAS,CAAC,uBAA7B,CAAqD,QAAQ,CAAE,KAAKH,oBAApE,EAFJ,CAGI,2CAHJ,CAII,6BAAO,IAAI,CAAC,MAAZ,CAAmB,SAAS,CAAC,mBAA7B,CAAiD,QAAQ,CAAE,KAAKE,gBAAhE,EAJJ,CAKI,6BAAO,IAAI,CAAC,QAAZ,CAAqB,KAAK,CAAC,QAA3B,EALJ,CAbJ,CAAR,CAsBH,C,kBA1EcX,KAAK,CAAC4B,S,EAkFzB,cAAezB,CAAAA,IAAf","sourcesContent":["import React from 'react';\nimport io from 'socket.io-client';\n\nconst socket = io('http://localhost:3000');\n\nclass Chat extends React.Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            text: \"\",\n            username: \"\",\n            messages: []    \n        };\n\n        this.handleChangeUsername = this.handleChangeUsername.bind(this);\n        this.handleChangeText = this.handleChangeText.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleDataRecived = this.handleDataRecived.bind(this);\n    }\n    componentDidMount(){\n        socket.on('connect', function() {\n            console.info(\"Connected\");\n        });\n\n        socket.on('chat message', this.handleDataRecived);\n\n        socket.on('disconnect', function() {\n            console.info(\"Disconnected\");\n        });\n    }\n\n    handleDataRecived(message) {\n        var messages = this.state.messages;\n        messages.push(message);\n        this.setState({messages:messages});\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        \n        socket.emit('chat message', \n        {\n            username: this.state.username,\n            text: this.state.text\n        });\n    }\n\n    handleChangeUsername(event) {\n         this.setState({username: event.target.value});\n      }\n    handleChangeText(event) {\n        this.setState({text: event.target.value});\n    }\n\n\n    render() {\n        return  <div className=\"chat-container\">\n                    <h4>Chat</h4>\n                    <div className=\"all-messages\">\n                    {this.state.messages.map((msg, index) => (\n                        <div key={index} className=\"message\">\n                            <p className=\"all-messages-text\">  {msg.text}</p>\n                            <p className=\"all-messages-username\"> {msg.username}</p>\n                        </div>\n\n                    ))}\n\n                    </div>\n\n                    <form onSubmit={this.handleSubmit} className=\"message-form\">\n                        <label>Username</label>\n                        <input type=\"text\" className=\"message-form-username\" onChange={this.handleChangeUsername}/>\n                        <label>Message</label>\n                        <input type=\"text\" className=\"message-form-text\" onChange={this.handleChangeText} />\n                        <input type=\"submit\" value=\"Skicka\" />\n                    </form>\n                    \n                </div>\n    }\n}\n\n\n\n\n\n\nexport default Chat;"]},"metadata":{},"sourceType":"module"}