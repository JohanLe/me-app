{"ast":null,"code":"var _jsxFileName = \"/Users/Ledel/Documents/skola/bth/dbwebb-kurser/ramverk1/me/app/me-app/me-app/src/js/components/ReportEdit.js\";\nimport React from 'react';\nimport ReportQuestion from './ReportQuestion.js';\n\nclass ReportEdit extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getReport = () => {\n      fetch(\"http://localhost:8333/reports/\" + this.state.kmom, {\n        method: \"GET\",\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      }).then(res => {\n        return res.json();\n      }).then(async res => {\n        if (res.data) {\n          var parsed = JSON.parse(res.data.text);\n          var data = parsed.map((item, index) => {\n            item['id'] = index;\n            return item;\n          });\n          this.setState({\n            reportData: data\n          });\n          this.state.editFields = this.createReportQuestion(data);\n        }\n      });\n    };\n\n    this.postReport = data => {\n      fetch(\"http://localhost:8333/reports\", {\n        method: \"POST\",\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          kmom: this.state.kmom,\n          data: data\n        })\n      }).then(res => {\n        return res.json();\n      }).then(res => {\n        console.log(res.msg);\n      });\n    };\n\n    this.createReportQuestion = data => {\n      var questions = data.map((item, index) => {\n        return React.createElement(ReportQuestion, {\n          key: index,\n          index: item.id,\n          question: item.question,\n          answer: item.answer,\n          triggerQuestion: this.handleOnChange,\n          triggerAnswer: this.handleOnChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        });\n      });\n      var newData = this.state.editFields;\n      newData.push(questions);\n      this.setState({\n        editFields: newData\n      });\n    };\n\n    this.addQuestion = event => {\n      if (event) {\n        event.preventDefault();\n      }\n\n      var item = {\n        id: this.state.reportData.length,\n        question: \"New\",\n        answer: \"New\"\n      };\n      this.createReportQuestion([item]);\n      var newState = this.state.reportData;\n      newState.push(item);\n      this.setState({\n        reportData: newState\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.postReport(JSON.stringify(this.state.reportData));\n    };\n\n    this.handleOnChange = event => {\n      let nam = event.target.name;\n      let val = event.target.value;\n      let id = event.target.id;\n      var state = this.state.reportData;\n      var newState = [];\n      state.forEach(item => {\n        if (item.id == id) {\n          item[nam] = val;\n        }\n\n        newState.push(item);\n      });\n      this.setState({\n        reportData: newState\n      });\n    };\n\n    this.state = {\n      kmom: this.props.match.params.kmom,\n      reportData: [],\n      editFields: []\n    };\n    this.getReport();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"edit_report_container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"edit-question-form\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, this.state.editFields), React.createElement(\"button\", {\n      onClick: this.addQuestion,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"Add question\"), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Spara\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default ReportEdit;","map":{"version":3,"sources":["/Users/Ledel/Documents/skola/bth/dbwebb-kurser/ramverk1/me/app/me-app/me-app/src/js/components/ReportEdit.js"],"names":["React","ReportQuestion","ReportEdit","Component","constructor","props","getReport","fetch","state","kmom","method","headers","then","res","json","data","parsed","JSON","parse","text","map","item","index","setState","reportData","editFields","createReportQuestion","postReport","body","stringify","console","log","msg","questions","id","question","answer","handleOnChange","newData","push","addQuestion","event","preventDefault","length","newState","handleSubmit","nam","target","name","val","value","forEach","match","params","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReportQuestion from './ReportQuestion.js';\n\nclass ReportEdit extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            kmom: this.props.match.params.kmom,\n            reportData: [],\n            editFields: [],\n        };\n        this.getReport();\n    }\n\n    getReport = () => {\n        fetch(\"http://localhost:8333/reports/\" + this.state.kmom, {\n            method: \"GET\",\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            },\n        }).then((res) => {\n            return res.json();\n        }).then(async (res) => {\n\n            if(res.data){\n               var parsed = JSON.parse(res.data.text);\n                var data = parsed.map((item, index) => {\n                    item['id'] = index;\n                    return item;\n                });\n                this.setState({reportData: data});\n                this.state.editFields = this.createReportQuestion(data);\n                \n            }\n     \n        });\n    };\n    postReport = (data) => {\n\n        fetch(\"http://localhost:8333/reports\", {\n            method: \"POST\",\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                kmom: this.state.kmom,\n                data: data\n            })\n        }).then((res) => {\n            return (res.json());\n\n        }).then((res) => {\n            console.log(res.msg);\n        })\n\n    };\n\n    createReportQuestion = (data) => {\n        var questions = data.map((item, index) => {\n            return (\n                <ReportQuestion\n                    key={index}\n                    index={item.id}\n                    question={item.question}\n                    answer={item.answer}\n                    triggerQuestion={this.handleOnChange}\n                    triggerAnswer={this.handleOnChange}\n                />\n            );\n        });\n        var newData = this.state.editFields;\n        newData.push(questions);\n        this.setState({editFields: newData});\n    };\n    addQuestion = (event) => {\n        if (event) {\n            event.preventDefault();\n        }\n        var item  = {id:(this.state.reportData.length), question: \"New\", answer: \"New\"};\n        this.createReportQuestion([item]);\n        var newState = this.state.reportData;\n        newState.push(item);\n        this.setState({reportData: newState});\n    };\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        this.postReport(JSON.stringify(this.state.reportData));\n    };\n\n    handleOnChange = (event) => {\n\n        let nam = event.target.name;\n        let val = event.target.value;\n        let id = event.target.id;\n        var state = this.state.reportData;\n        var newState = [];\n        state.forEach((item)=>{\n            if(item.id == id){\n                item[nam] = val;\n            }\n            newState.push(item);\n\n        });\n        this.setState({reportData: newState});\n    };\n\n\n    render() {\n        return (\n            <div className=\"edit_report_container\">\n\n                <form className=\"edit-question-form\" onSubmit={this.handleSubmit}>\n                    <div>\n                        {this.state.editFields}\n                    </div>\n                    <button onClick={this.addQuestion}>Add question</button>\n                    <input type=\"submit\" value=\"Spara\"/>\n                </form>\n\n            </div>\n\n        )\n    }\n}\n\nexport default ReportEdit;"]},"metadata":{},"sourceType":"module"}