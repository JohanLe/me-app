{"ast":null,"code":"var _jsxFileName = \"/Users/Ledel/Documents/skola/bth/dbwebb-kurser/ramverk1/me/app/me-app/me-app/src/js/components/ReportEdit.js\";\nimport React from 'react';\nimport ReportQuestion from './ReportQuestion.js';\n\nclass ReportEdit extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getReport = () => {\n      fetch(\"http://localhost:8333/reports/\" + this.state.kmom, {\n        method: \"GET\",\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      }).then(res => {\n        return res.json();\n      }).then(res => {\n        this.setState.reportData = JSON.parse(res.data.text);\n        console.log(this.state.reportData);\n      });\n    };\n\n    this.postReport = data => {\n      console.log(this.state.reportData); // todo skicka json filer\n\n      fetch(\"http://localhost:8333/reports\", {\n        method: \"POST\",\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          kmom: this.state.kmom,\n          data: data\n        })\n      }).then(res => {\n        return res.json();\n      }).then(res => {\n        console.log(res);\n      });\n    };\n\n    this.createReportQuestion = data => {\n      var questions = data.map((collection, index) => {\n        return React.createElement(ReportQuestion, {\n          key: index,\n          index: index,\n          question: collection.question,\n          answer: collection.answer,\n          trigger: this.handleOnChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        });\n      });\n      return questions;\n    };\n\n    this.addQuestion = event => {\n      event.preventDefault();\n      var newData = this.state.displayData;\n      console.log(newData);\n      newData.qas.push({\n        question: \"New\",\n        answer: \"New\"\n      });\n      this.setState({\n        displayData: newData\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.postReport(this.state.reportData);\n    };\n\n    this.handleOnChange = event => {\n      let nam = event.target.name;\n      let val = event.target.value;\n      this.setState({\n        [nam]: val\n      });\n    };\n\n    this.state = {\n      kmom: this.props.match.params.kmom,\n      reportData: {\n        data: []\n      }\n    };\n    this.getReport();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"edit_report_container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(\"form\", {\n      className: \"edit-question-form\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.addQuestion,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Add question\"), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Spara\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default ReportEdit;","map":{"version":3,"sources":["/Users/Ledel/Documents/skola/bth/dbwebb-kurser/ramverk1/me/app/me-app/me-app/src/js/components/ReportEdit.js"],"names":["React","ReportQuestion","ReportEdit","Component","constructor","props","getReport","fetch","state","kmom","method","headers","then","res","json","setState","reportData","JSON","parse","data","text","console","log","postReport","body","stringify","createReportQuestion","questions","map","collection","index","question","answer","handleOnChange","addQuestion","event","preventDefault","newData","displayData","qas","push","handleSubmit","nam","target","name","val","value","match","params","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReportQuestion from './ReportQuestion.js';\n\nclass ReportEdit extends React.Component {\n     constructor(props) {\n        super(props);\n        this.state = {\n            kmom: this.props.match.params.kmom,\n            reportData: {data: []},\n\n        };\n        this.getReport();\n    }\n\n    getReport =  () => {\n         fetch(\"http://localhost:8333/reports/\" + this.state.kmom, {\n            method: \"GET\",\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            },\n        }).then((res) => {\n            return res.json();\n        }).then((res) => {\n            this.setState.reportData = JSON.parse(res.data.text);\n            console.log(this.state.reportData);\n        });\n    };\n    postReport = (data) => {\n        console.log(this.state.reportData);\n        // todo skicka json filer\n        fetch(\"http://localhost:8333/reports\", {\n            method: \"POST\",\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                kmom: this.state.kmom,\n                data: data\n            })\n        }).then((res) => {\n            return res.json()\n        }).then((res) => {\n            console.log(res);\n        })\n\n    };\n\n    createReportQuestion = (data) => {\n        var questions = data.map((collection, index) => {\n            return (\n                <ReportQuestion\n                    key={index}\n                    index={index}\n                    question={collection.question}\n                    answer={collection.answer}\n                    trigger={this.handleOnChange}\n                />\n            );\n        });\n\n        return questions;\n    };\n    addQuestion = (event) => {\n        event.preventDefault();\n        var newData = this.state.displayData;\n        console.log(newData);\n        newData.qas.push({question: \"New\", answer: \"New\"});\n        this.setState({displayData: newData});\n    };\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n\n        this.postReport(this.state.reportData);\n    };\n\n    handleOnChange = (event) => {\n        let nam = event.target.name;\n        let val = event.target.value;\n        this.setState({[nam]: val});\n    };\n\n\n    render() {\n        return (\n            <div className=\"edit_report_container\">\n                <div>\n                </div>\n                <form className=\"edit-question-form\" onSubmit={this.handleSubmit}>\n                    <button onClick={this.addQuestion}>Add question</button>\n                    <input type=\"submit\" value=\"Spara\"/>\n                </form>\n\n                <div>\n                </div>\n            </div>\n\n        )\n    }\n}\n\nexport default ReportEdit;"]},"metadata":{},"sourceType":"module"}