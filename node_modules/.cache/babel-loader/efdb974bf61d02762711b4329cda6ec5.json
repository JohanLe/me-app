{"ast":null,"code":"var _jsxFileName = \"/Users/Ledel/Documents/skola/bth/dbwebb-kurser/ramverk1/me/app/me-app/me-app/src/js/components/ReportEdit.js\";\nimport React from 'react';\nimport ReportQuestion from './ReportQuestion.js';\n\nclass ReportEdit extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getReport = () => {\n      fetch(\"http://localhost:8333/reports/\" + this.state.kmom, {\n        method: \"GET\",\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      }).then(res => {\n        return res.json();\n      }).then(res => {\n        if (res.data) {\n          console.log(res);\n          /* var parsed = JSON.parse(res.data.text);\n          var data = parsed.map((item, index) => {\n              item['id'] = index;\n              return item;\n          });\n          */\n\n          this.setState({\n            reportData: data\n          });\n          this.state.editFields = this.createReportQuestion(data);\n        }\n      });\n    };\n\n    this.postReport = data => {\n      fetch(\"http://localhost:8333/reports\", {\n        method: \"POST\",\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          kmom: this.state.kmom,\n          data: data,\n          token: localStorage.getItem('jwt')\n        })\n      }).then(res => {\n        return res.json();\n      }).then(res => {\n        console.log(res);\n\n        if (res.data.status == 'ok') {\n          var url = '/reports/week/' + this.state.kmom;\n          window.location.replace(url);\n        }\n      });\n    };\n\n    this.createReportQuestion = data => {\n      var questions = data.map((item, index) => {\n        return React.createElement(ReportQuestion, {\n          key: index,\n          index: item.id,\n          question: item.question,\n          answer: item.answer,\n          triggerQuestion: this.handleOnChange,\n          triggerAnswer: this.handleOnChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        });\n      });\n      var newData = this.state.editFields;\n      newData.push(questions);\n      this.setState({\n        editFields: newData\n      });\n    };\n\n    this.addQuestion = event => {\n      if (event) {\n        event.preventDefault();\n      }\n\n      var item = {\n        id: this.state.reportData.length,\n        question: \"New\",\n        answer: \"New\"\n      };\n      this.createReportQuestion([item]);\n      var newState = this.state.reportData;\n      newState.push(item);\n      this.setState({\n        reportData: newState\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.postReport(JSON.stringify(this.state.reportData));\n    };\n\n    this.handleOnChange = event => {\n      let nam = event.target.name;\n      let val = event.target.value;\n      let id = event.target.id;\n      var state = this.state.reportData;\n      var newState = [];\n      state.forEach(item => {\n        if (item.id == id) {\n          item[nam] = val;\n        }\n\n        newState.push(item);\n      });\n      this.setState({\n        reportData: newState\n      });\n    };\n\n    this.state = {\n      kmom: this.props.match.params.kmom,\n      reportData: [],\n      editFields: []\n    };\n    this.getReport();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"edit_report_container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"edit-question-form\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, this.state.editFields), React.createElement(\"button\", {\n      onClick: this.addQuestion,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Add question\"), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Spara\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default ReportEdit;","map":{"version":3,"sources":["/Users/Ledel/Documents/skola/bth/dbwebb-kurser/ramverk1/me/app/me-app/me-app/src/js/components/ReportEdit.js"],"names":["React","ReportQuestion","ReportEdit","Component","constructor","props","getReport","fetch","state","kmom","method","headers","then","res","json","data","console","log","setState","reportData","editFields","createReportQuestion","postReport","body","JSON","stringify","token","localStorage","getItem","status","url","window","location","replace","questions","map","item","index","id","question","answer","handleOnChange","newData","push","addQuestion","event","preventDefault","length","newState","handleSubmit","nam","target","name","val","value","forEach","match","params","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReportQuestion from './ReportQuestion.js';\n\nclass ReportEdit extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            kmom: this.props.match.params.kmom,\n            reportData: [],\n            editFields: [],\n        };\n        this.getReport();\n    \n    }\n\n    getReport = () => {\n        fetch(\"http://localhost:8333/reports/\" + this.state.kmom, {\n            method: \"GET\",\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            },\n        }).then((res) => {\n            return res.json();\n        }).then((res) => {\n            if(res.data){\n              console.log(res);\n                /* var parsed = JSON.parse(res.data.text);\n                var data = parsed.map((item, index) => {\n                    item['id'] = index;\n                    return item;\n                });\n                */\n                this.setState({reportData: data});\n                this.state.editFields = this.createReportQuestion(data);\n                \n            }\n     \n        });\n    };\n    postReport = (data) => {\n\n        fetch(\"http://localhost:8333/reports\", {\n            method: \"POST\",\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                kmom: this.state.kmom,\n                data: data,\n                token: localStorage.getItem('jwt')\n            })\n        }).then((res) => {\n            return (res.json());\n\n        }).then((res) => {\n            console.log(res);\n            if(res.data.status == 'ok'){\n                var url = '/reports/week/' + this.state.kmom;\n                window.location.replace(url);\n            }\n        })\n\n    };\n\n    createReportQuestion = (data) => {\n        var questions = data.map((item, index) => {\n            return (\n                <ReportQuestion\n                    key={index}\n                    index={item.id}\n                    question={item.question}\n                    answer={item.answer}\n                    triggerQuestion={this.handleOnChange}\n                    triggerAnswer={this.handleOnChange}\n                />\n            );\n        });\n        var newData = this.state.editFields;\n        newData.push(questions);\n        this.setState({editFields: newData});\n    };\n    addQuestion = (event) => {\n        if (event) {\n            event.preventDefault();\n        }\n        var item  = {id:(this.state.reportData.length), question: \"New\", answer: \"New\"};\n        this.createReportQuestion([item]);\n        var newState = this.state.reportData;\n        newState.push(item);\n        this.setState({reportData: newState});\n    };\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        this.postReport(JSON.stringify(this.state.reportData));\n    };\n\n    handleOnChange = (event) => {\n\n        let nam = event.target.name;\n        let val = event.target.value;\n        let id = event.target.id;\n        var state = this.state.reportData;\n        var newState = [];\n        state.forEach((item)=>{\n            if(item.id == id){\n                item[nam] = val;\n            }\n            newState.push(item);\n\n        });\n        this.setState({reportData: newState});\n    };\n\n\n    render() {\n        return (\n            <div className=\"edit_report_container\">\n\n                <form className=\"edit-question-form\" onSubmit={this.handleSubmit}>\n                    <div>\n                        {this.state.editFields}\n                    </div>\n                    <button onClick={this.addQuestion}>Add question</button>\n                    <input type=\"submit\" value=\"Spara\"/>\n                </form>\n\n            </div>\n\n        )\n    }\n\n}\n\nexport default ReportEdit;\n\n"]},"metadata":{},"sourceType":"module"}