{"ast":null,"code":"var _jsxFileName = \"/Users/ledel/WebbServer/dbwebb-kurser/jsramverk/me/app/me-app/src/js/components/Chat.js\";\nimport React from 'react';\nimport io from 'socket.io-client';\nconst socket = io('http://localhost:3000');\n\nclass Chat extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      className: \"chat-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, \"Chat\"), React.createElement(\"div\", {\n      className: \"all-message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, \"Write new message:\")), React.createElement(\"input\", {\n      id: \"new-message\",\n      class: \"new-message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }));\n  }\n\n}\n\nsocket.on('connect', function () {\n  console.info(\"Connected\");\n  console.info(\"Connected s2123\");\n});\nsocket.on('disconnect', function () {\n  console.info(\"Disconnected\");\n});\nconst newMessage = document.getElementById(\"new-message\");\nsocket.on('connect', function () {\n  newMessage.addEventListener(\"keyup\", function (event) {\n    if (event.code === \"Enter\") {\n      socket.emit('chat message', event.target.value);\n      event.target.value = \"\";\n    }\n  });\n});\nexport default Chat;","map":{"version":3,"sources":["/Users/ledel/WebbServer/dbwebb-kurser/jsramverk/me/app/me-app/src/js/components/Chat.js"],"names":["React","io","socket","Chat","Component","render","on","console","info","newMessage","document","getElementById","addEventListener","event","code","emit","target","value"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,EAAP,MAAe,kBAAf;AAEA,MAAMC,MAAM,GAAGD,EAAE,CAAC,uBAAD,CAAjB;;AAIA,MAAME,IAAN,SAAmBH,KAAK,CAACI,SAAzB,CAAmC;AAC/BC,EAAAA,MAAM,GAAG;AACL,WAAQ;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAH,CAJJ,EAKI;AAAO,MAAA,EAAE,EAAC,aAAV;AAAwB,MAAA,KAAK,EAAC,aAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,CAAR;AAOH;;AAT8B;;AAanCH,MAAM,CAACI,EAAP,CAAU,SAAV,EAAqB,YAAW;AAC5BC,EAAAA,OAAO,CAACC,IAAR,CAAa,WAAb;AACAD,EAAAA,OAAO,CAACC,IAAR,CAAa,iBAAb;AACH,CAHD;AAKAN,MAAM,CAACI,EAAP,CAAU,YAAV,EAAwB,YAAW;AAC/BC,EAAAA,OAAO,CAACC,IAAR,CAAa,cAAb;AACH,CAFD;AAIA,MAAMC,UAAU,GAAGC,QAAQ,CAACC,cAAT,CAAwB,aAAxB,CAAnB;AAEAT,MAAM,CAACI,EAAP,CAAU,SAAV,EAAqB,YAAW;AAC5BG,EAAAA,UAAU,CAACG,gBAAX,CAA4B,OAA5B,EAAqC,UAAUC,KAAV,EAAiB;AAClD,QAAIA,KAAK,CAACC,IAAN,KAAe,OAAnB,EAA4B;AACxBZ,MAAAA,MAAM,CAACa,IAAP,CAAY,cAAZ,EAA4BF,KAAK,CAACG,MAAN,CAAaC,KAAzC;AACAJ,MAAAA,KAAK,CAACG,MAAN,CAAaC,KAAb,GAAqB,EAArB;AACH;AACJ,GALD;AAMH,CAPD;AAUA,eAAed,IAAf","sourcesContent":["import React from 'react';\nimport io from 'socket.io-client';\n\nconst socket = io('http://localhost:3000');\n\n\n\nclass Chat extends React.Component {\n    render() {\n        return  <div className=\"chat-container\">\n                    <h4>Chat</h4>\n                    <div className=\"all-message\"></div>\n\n                    <p><strong>Write new message:</strong></p>\n                    <input id=\"new-message\" class=\"new-message\"/>\n                </div>\n    }\n}\n\n\nsocket.on('connect', function() {\n    console.info(\"Connected\");\n    console.info(\"Connected s2123\");\n});\n\nsocket.on('disconnect', function() {\n    console.info(\"Disconnected\");\n});\n\nconst newMessage = document.getElementById(\"new-message\");\n\nsocket.on('connect', function() {\n    newMessage.addEventListener(\"keyup\", function (event) {\n        if (event.code === \"Enter\") {\n            socket.emit('chat message', event.target.value);\n            event.target.value = \"\";\n        }\n    });\n});\n\n\nexport default Chat;"]},"metadata":{},"sourceType":"module"}