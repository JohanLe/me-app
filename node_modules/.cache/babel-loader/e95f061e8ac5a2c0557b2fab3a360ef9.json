{"ast":null,"code":"var _jsxFileName = \"/Users/Ledel/Documents/skola/bth/dbwebb-kurser/ramverk1/me/app/me-app/me-app/src/js/components/ReportEdit.js\";\nimport React from 'react';\nimport ReportQuestion from './ReportQuestion.js';\n\nclass ReportEdit extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getReport = () => {\n      const kmom = this.props.match.params.kmom;\n      fetch(\"http://localhost:8333/reports/\" + kmom, {\n        method: \"GET\",\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      }).then(res => {\n        return res.json();\n      }).then(res => {\n        console.log(res);\n      });\n    };\n\n    this.postReport = data => {\n      console.log(this.state.reportData); // todo skicka json filer\n\n      fetch(\"http://localhost:8333/reports\", {\n        method: \"POST\",\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          reportData: data\n        })\n      }).then(res => {\n        return res.json();\n      }).then(res => {\n        console.log(res);\n      });\n    };\n\n    this.createReportQuestion = data => {\n      var questions = data.map((collection, index) => {\n        return React.createElement(ReportQuestion, {\n          key: index,\n          index: index,\n          question: collection.question,\n          answer: collection.answer,\n          trigger: this.handleOnChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        });\n      });\n      return questions;\n    };\n\n    this.addQuestion = event => {\n      event.preventDefault();\n      var newData = this.state.reportData;\n      newData.qas.push({\n        question: \"New\",\n        answer: \"New\"\n      });\n      this.setState({\n        reportData: newData\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.postReport(this.state.reportData);\n    };\n\n    this.handleOnChange = event => {\n      let nam = event.target.name;\n      let val = event.target.value;\n      this.setState({\n        [nam]: val\n      });\n    };\n\n    this.state = {\n      reportData: {}\n    };\n  }\n\n  render() {\n    const kmom = this.props.match.params.kmom;\n    this.getReport(kmom);\n    const questions = this.createReportQuestion(this.state.reportData.qas);\n    return React.createElement(\"div\", {\n      className: \"edit_report_container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, this.test), React.createElement(\"form\", {\n      className: \"edit-question-form\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, questions, React.createElement(\"button\", {\n      onClick: this.addQuestion,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Add question\"), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Spara\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }));\n  }\n\n}\n\nvar testData = {\n  \"qas\": [{\n    question: \"q1 \",\n    answer: \"a1\"\n  }, {\n    question: \"q2\",\n    answer: \"a2\"\n  }, {\n    question: \"q3\",\n    answer: \"a3\"\n  }, {\n    question: \"q4\",\n    answer: \"a4\"\n  }, {\n    question: \"q5\",\n    answer: \"a5\"\n  }]\n};\nexport default ReportEdit;","map":{"version":3,"sources":["/Users/Ledel/Documents/skola/bth/dbwebb-kurser/ramverk1/me/app/me-app/me-app/src/js/components/ReportEdit.js"],"names":["React","ReportQuestion","ReportEdit","Component","constructor","props","getReport","kmom","match","params","fetch","method","headers","then","res","json","console","log","postReport","data","state","reportData","body","JSON","stringify","createReportQuestion","questions","map","collection","index","question","answer","handleOnChange","addQuestion","event","preventDefault","newData","qas","push","setState","handleSubmit","nam","target","name","val","value","render","test","testData"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReportQuestion from './ReportQuestion.js';\n\nclass ReportEdit extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            reportData: {}\n        };\n    }\n\n    getReport = () => {\n        const kmom = this.props.match.params.kmom;\n        fetch(\"http://localhost:8333/reports/\" + kmom, {\n            method: \"GET\",\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            },\n        }).then((res) => {\n            return res.json()\n        }).then((res) => {\n            console.log(res);\n\n        });\n    };\n    postReport = (data) => {\n        console.log(this.state.reportData);\n        // todo skicka json filer\n        fetch(\"http://localhost:8333/reports\", {\n            method: \"POST\",\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                reportData: data\n            })\n        }).then((res) => {\n            return res.json()\n        }).then((res) => {\n            console.log(res);\n        })\n\n    };\n\n    createReportQuestion = (data) => {\n        var questions = data.map((collection, index) => {\n            return (\n                <ReportQuestion\n                    key={index}\n                    index={index}\n                    question={collection.question}\n                    answer={collection.answer}\n                    trigger={this.handleOnChange}\n                />\n            );\n        });\n\n        return questions;\n    };\n    addQuestion = (event) => {\n        event.preventDefault();\n        var newData = this.state.reportData;\n        newData.qas.push({question: \"New\", answer: \"New\"});\n        this.setState({reportData: newData});\n    };\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n\n        this.postReport(this.state.reportData);\n    };\n\n    handleOnChange = (event) => {\n        let nam = event.target.name;\n        let val = event.target.value;\n        this.setState({[nam]: val});\n    };\n\n\n    render() {\n        const kmom = this.props.match.params.kmom;\n        this.getReport(kmom);\n        const questions = this.createReportQuestion(this.state.reportData.qas);\n        return (\n\n            <div className=\"edit_report_container\">\n                <div>\n                    {this.test}\n                </div>\n                <form className=\"edit-question-form\" onSubmit={this.handleSubmit}>\n                    {questions}\n                    <button onClick={this.addQuestion}>Add question</button>\n                    <input type=\"submit\" value=\"Spara\"/>\n                </form>\n\n                <div>\n                </div>\n            </div>\n\n        )\n    }\n}\n\n\nvar testData = {\n    \"qas\": [\n        {\n            question: \"q1 \",\n            answer: \"a1\"\n        },\n        {question: \"q2\", answer: \"a2\"},\n        {question: \"q3\", answer: \"a3\"},\n        {question: \"q4\", answer: \"a4\"},\n        {question: \"q5\", answer: \"a5\"},\n    ]\n\n};\n\nexport default ReportEdit;"]},"metadata":{},"sourceType":"module"}